import fnmatch
import os
import platform

#opts = Options('SCustomize')
#opts.Add('debug', 'Build with debugging symbols', 0)
opt = Variables()
opt.Add('debug', help='Build with debugging symbols', default=0)
#opt.AddVariables(
#        ('debug', '', 0),
#        )

matches = []
for root, dirnames, filenames in os.walk('.'):
  for filename in fnmatch.filter(filenames, '*.c'):
      matches.append(os.path.join(root, filename))

env = Environment(variables=opt, CPPPATH = ['.', '../lib/external/include'], CFLAGS=['-std=c99'])
print "platform is :" + str(platform.system())

if(platform.system() == "Linux"):
    env.Append(CFLAGS = ['-L ../lib/external/arch64/lib'])

    debug = env.get('debug',1)

    if debug=='1':
        env.Append(CFLAGS = ['-g', '-Werror'])
    else:
        env.Append(CFLAGS = ['-O3'])

    env.Append(LIBS = ['GL', 'SDL', 'SDL_image', 'm', File('../lib/external/arch64/lib/libchipmunk.a'), 'openal', 'ftgl'])

    env.ParseConfig('sdl-config --cflags')
    env.ParseConfig('sdl-config --libs')
    env.ParseConfig('freealut-config --cflags')
    env.ParseConfig('freealut-config --libs')

    env.Program('pmuj', matches)
else:
    env.Append(CFLAGS = ['-L ../lib/external/win32/lib'])

    debug = env.get('debug',1)

    if debug=='1':
        env.Append(CFLAGS = ['-g', '-Werror'])
    else:
        env.Append(CFLAGS = ['-O3'])

    env.Append(LIBS = ['GL', 'm', File('../lib/external/lib/win32/libSDLmain.a'), File('../lib/external/lib/win32/libSDL.dll.a'), File('../lib/external/lib/win32/libchipmunk.a'), 'openal', 'SDL_image'])

    env.Program('pmuj', matches)
